apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.container_metadata.kafka.name }}
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.global.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Values.container_metadata.kafka.name }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app: {{ .Values.container_metadata.kafka.name }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Values.container_metadata.kafka.name }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app: {{ .Values.container_metadata.kafka.name }}
    spec:
      serviceAccountName: {{ .Values.syn_kube_service_account }}
      containers:
      - name: {{ .Values.container_metadata.kafka.name }}
        image: "{{ .Values.global.image.repository }}/{{ .Values.container_metadata.kafka.image_name }}:{{ .Values.global.image.tag }}"
        imagePullPolicy: {{ .Values.global.image.pullPolicy }}
        ports:
        - containerPort: 9092
        - containerPort: 31093
        - containerPort: 31092
        env:
          - name: KAFKA_BROKER_ID
            valueFrom:
              configMapKeyRef:
                name: {{ .Values.global.configMap.name }}
                key: syntasa_kafka_broker_id
          - name: KAFKA_ZOOKEEPER_CONNECT
            valueFrom:
              configMapKeyRef:
                name: {{ .Values.global.configMap.name }}
                key: syntasa_kafka_zoo_uri
          - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
            valueFrom:
              configMapKeyRef:
                name: {{ .Values.global.configMap.name }}
                key: syntasa_kafka_security_protocols
          - name: KAFKA_ADVERTISED_LISTENERS
            valueFrom:
              configMapKeyRef:
                name: {{ .Values.global.configMap.name }}
                key: syntasa_kafka_broker_uri
          - name: CONFLUENT_METRICS_ENABLE
            valueFrom:
              configMapKeyRef:
                name: {{ .Values.global.configMap.name }}
                key: syntasa_kafka_confluent_enable
          - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
            valueFrom:
              configMapKeyRef:
                name: {{ .Values.global.configMap.name }}
                key: syntasa_kafka_topic_replication_factor
          - name: KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS
            valueFrom:
              configMapKeyRef:
                name: {{ .Values.global.configMap.name }}
                key: syntasa_kafka_rebalance_delay
          - name: KAFKA_MESSAGE_MAX_BYTES
            valueFrom:
              configMapKeyRef:
                name: {{ .Values.global.configMap.name }}
                key: syntasa_kafka_message_maxbytes
          - name: KAFKA_REPLICA_FETCH_MAX_BYTES
            valueFrom:
              configMapKeyRef:
                name: {{ .Values.global.configMap.name }}
                key: syntasa_kafka_fetch_maxbytes
          - name: KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS
            valueFrom:
              configMapKeyRef:
                name: {{ .Values.global.configMap.name }}
                key: syntasa_kafka_log_retention_interval
          - name: KAFKA_LOG_CLEANER_DELETE_RETENTION_MS
            valueFrom:
              configMapKeyRef:
                name: {{ .Values.global.configMap.name }}
                key: syntasa_kafka_log_cleaner_interval
          - name: KAFKA_TOPICS
            valueFrom:
              configMapKeyRef:
                name: {{ .Values.global.configMap.name }}
                key: syntasa_kafka_topics
      - name: {{ .Values.container_metadata.zookeeper.name }}
        image: "{{ .Values.global.image.repository }}/{{ .Values.container_metadata.zookeeper.image_name }}:{{ .Values.global.image.tag }}"
        imagePullPolicy: {{ .Values.global.image.pullPolicy }}
        env:
          - name: ZOOKEEPER_CLIENT_PORT
            valueFrom:
              configMapKeyRef:
                name: {{ .Values.global.configMap.name }}
                key: syntasa_zookeeper_client_port
          - name: ZOOKEEPER_TICK_TIME
            valueFrom:
              configMapKeyRef:
                name: {{ .Values.global.configMap.name }}
                key: syntasa_zookeeper_tick_time
        ports:
          - containerPort: 2181
            name: zookeeper
      imagePullSecrets:
        - name: {{.Values.global.imagePullSecret.name }}